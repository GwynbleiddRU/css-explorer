{
  "@font-face": {
    "font-family": "Определяет имя, которое будет использоваться как значение начертания шрифта для свойств шрифта.",
    "src": "Определяет ресурс, содержащий данные шрифта.",
    "font-stretch": "Определяет растяжение шрифта.",
    "font-style": "Определяет стиль шрифта.",
    "font-weight": "Определяет толщину шрифта.",
    "unicode-range": "Определяет диапазон символов Unicode, поддерживаемых шрифтом."
  },
  "@keyframes": {
    "from": "Представляет начальное состояние последовательности анимации.",
    "to": "Представляет конечное состояние последовательности анимации.",
    "percentage": "Представляет промежуточные состояния последовательности анимации (например, 25%, 50%, 75%)."
  },
  "align-content": {
    "stretch": "Значение по умолчанию. Строки растягиваются, чтобы занять оставшееся пространство.",
    "center": "Строки группируются в центре контейнера.",
    "flex-start": "Строки группируются в начале контейнера.",
    "flex-end": "Строки группируются в конце контейнера.",
    "space-between": "Строки равномерно распределяются с первой строкой в начале и последней строкой в конце.",
    "space-around": "Строки равномерно распределяются с одинаковым пространством вокруг каждой строки.",
    "space-evenly": "Строки равномерно распределяются с одинаковым пространством между ними.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "align-items": {
    "stretch": "Значение по умолчанию. Элементы растягиваются, чтобы заполнить контейнер.",
    "center": "Элементы позиционируются в центре контейнера.",
    "flex-start": "Элементы позиционируются в верхней части контейнера.",
    "flex-end": "Элементы позиционируются в нижней части контейнера.",
    "baseline": "Элементы позиционируются по базовой линии контейнера.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "align-self": {
    "auto": "Значение по умолчанию. Элемент наследует свойство align-items родительского контейнера.",
    "stretch": "Элемент растягивается, чтобы заполнить контейнер.",
    "center": "Элемент позиционируется в центре контейнера.",
    "flex-start": "Элемент позиционируется в верхней части контейнера.",
    "flex-end": "Элемент позиционируется в нижней части контейнера.",
    "baseline": "Элемент позиционируется по базовой линии контейнера.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "animation": {
    "name": "Определяет имя анимации @keyframes.",
    "duration": "Определяет, сколько секунд или миллисекунд занимает один цикл анимации.",
    "timing-function": "Определяет кривую скорости анимации.",
    "delay": "Определяет задержку перед началом анимации.",
    "iteration-count": "Определяет, сколько раз должна проигрываться анимация.",
    "direction": "Определяет, должна ли анимация проигрываться в обратном порядке в чередующихся циклах.",
    "fill-mode": "Определяет, какие значения применяются анимацией вне времени её выполнения.",
    "play-state": "Определяет, запущена анимация или приостановлена.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "animation-delay": {
    "time": "Определяет задержку перед началом анимации (например, 3s, 200ms).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "animation-direction": {
    "normal": "Значение по умолчанию. Анимация проигрывается как обычно (вперёд).",
    "reverse": "Анимация проигрывается в обратном направлении (назад).",
    "alternate": "Анимация проигрывается сначала вперёд, затем назад.",
    "alternate-reverse": "Анимация проигрывается сначала назад, затем вперёд.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "animation-duration": {
    "time": "Определяет, сколько секунд или миллисекунд занимает один цикл анимации (например, 3s, 200ms).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "animation-fill-mode": {
    "none": "Значение по умолчанию. Анимация не применяет никаких стилей к элементу до или после её выполнения.",
    "forwards": "Элемент сохраняет значения стилей, установленные последним ключевым кадром.",
    "backwards": "Элемент получает значения стилей, установленные первым ключевым кадром в течение периода animation-delay.",
    "both": "Анимация следует правилам как для forwards, так и для backwards.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "animation-iteration-count": {
    "number": "Число, определяющее, сколько раз должна проигрываться анимация (например, 3).",
    "infinite": "Указывает, что анимация должна проигрываться бесконечное количество раз.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "animation-name": {
    "keyframename": "Определяет имя анимации @keyframes.",
    "none": "Значение по умолчанию. Анимация не применяется.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "animation-play-state": {
    "running": "Значение по умолчанию. Анимация запущена.",
    "paused": "Анимация приостановлена.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "animation-timing-function": {
    "ease": "Значение по умолчанию. Определяет анимацию с медленным началом, затем быстрой, затем медленным окончанием.",
    "linear": "Определяет анимацию с одинаковой скоростью от начала до конца.",
    "ease-in": "Определяет анимацию с медленным началом.",
    "ease-out": "Определяет анимацию с медленным окончанием.",
    "ease-in-out": "Определяет анимацию с медленным началом и окончанием.",
    "cubic-bezier(n,n,n,n)": "Определяет кривую Безье для пользовательской функции времени.",
    "steps(n, start|end)": "Определяет ступенчатую функцию времени с n шагами.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "backface-visibility": {
    "visible": "Значение по умолчанию. Обратная сторона видна, когда повёрнута к пользователю.",
    "hidden": "Обратная сторона не видна, когда повёрнута к пользователю.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "background": {
    "color": "Определяет цвет фона.",
    "image": "Определяет одно или несколько фоновых изображений.",
    "position": "Определяет положение фоновых изображений.",
    "size": "Определяет размер фоновых изображений.",
    "repeat": "Определяет, как повторяются фоновые изображения.",
    "origin": "Определяет, где расположены фоновые изображения.",
    "clip": "Определяет область отображения фоновых изображений.",
    "attachment": "Определяет, фиксируются ли фоновые изображения или прокручиваются вместе со страницей.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "background-attachment": {
    "scroll": "Значение по умолчанию. Фоновое изображение прокручивается вместе со страницей.",
    "fixed": "Фоновое изображение остаётся фиксированным на месте даже при прокрутке.",
    "local": "Фоновое изображение прокручивается вместе с содержимым элемента.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "background-blend-mode": {
    "normal": "Значение по умолчанию. Фоновое изображение отображается обычным образом.",
    "multiply": "Умножает цвета фонового изображения на цвета фонового цвета.",
    "screen": "Умножает инверсию цветов фонового изображения на инверсию цветов фонового цвета.",
    "overlay": "Умножает или экранирует цвета в зависимости от фонового цвета.",
    "darken": "Выбирает более тёмный из фонового цвета и фонового изображения.",
    "lighten": "Выбирает более светлый из фонового цвета и фонового изображения.",
    "color-dodge": "Осветляет фоновый цвет, чтобы отразить фоновое изображение.",
    "color-burn": "Затемняет фоновый цвет, чтобы отразить фоновое изображение.",
    "hard-light": "Умножает или экранирует цвета в зависимости от фонового изображения.",
    "soft-light": "Затемняет или осветляет цвета в зависимости от фонового изображения.",
    "difference": "Вычитает более тёмный из двух цветов из более светлого цвета.",
    "exclusion": "Подобно difference, но с меньшим контрастом.",
    "hue": "Использует оттенок фонового изображения с насыщенностью и яркостью фонового цвета.",
    "saturation": "Использует насыщенность фонового изображения с оттенком и яркостью фонового цвета.",
    "color": "Использует оттенок и насыщенность фонового изображения с яркостью фонового цвета.",
    "luminosity": "Использует яркость фонового изображения с оттенком и насыщенностью фонового цвета.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "background-clip": {
    "border-box": "Значение по умолчанию. Фон распространяется до внешнего края границы.",
    "padding-box": "Фон распространяется до внешнего края отступа.",
    "content-box": "Фон обрезается до блока содержимого.",
    "text": "Фон обрезается по тексту.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "background-color": {
    "color": "Определяет цвет фона (например, red, #F1F1F1, rgb(255,0,0)).",
    "transparent": "Значение по умолчанию. Цвет фона прозрачный.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "background-image": {
    "url": "Определяет URL изображения (например, url('image.jpg')).",
    "none": "Значение по умолчанию. Фоновое изображение не отображается.",
    "linear-gradient": "Создаёт линейный градиент (например, linear-gradient(direction, color-stop1, color-stop2, ...)).",
    "radial-gradient": "Создаёт радиальный градиент (например, radial-gradient(shape size at position, color-stop1, color-stop2, ...)).",
    "repeating-linear-gradient": "Создаёт повторяющийся линейный градиент.",
    "repeating-radial-gradient": "Создаёт повторяющийся радиальный градиент.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "background-origin": {
    "padding-box": "Значение по умолчанию. Фон позиционируется относительно блока отступа.",
    "border-box": "Фон позиционируется относительно блока границы.",
    "content-box": "Фон позиционируется относительно блока содержимого.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "background-position": {
    "left top": "Фоновое изображение позиционируется в верхнем левом углу элемента.",
    "left center": "Фоновое изображение позиционируется в центре левой стороны элемента.",
    "left bottom": "Фоновое изображение позиционируется в нижнем левом углу элемента.",
    "right top": "Фоновое изображение позиционируется в верхнем правом углу элемента.",
    "right center": "Фоновое изображение позиционируется в центре правой стороны элемента.",
    "right bottom": "Фоновое изображение позиционируется в нижнем правом углу элемента.",
    "center top": "Фоновое изображение позиционируется в верхнем центре элемента.",
    "center center": "Фоновое изображение позиционируется в центре элемента.",
    "center bottom": "Фоновое изображение позиционируется в нижнем центре элемента.",
    "x% y%": "Первое значение — горизонтальное положение, второе значение — вертикальное положение.",
    "xpos ypos": "Первое значение — горизонтальное положение, второе значение — вертикальное положение.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "background-repeat": {
    "repeat": "Значение по умолчанию. Фоновое изображение повторяется как по вертикали, так и по горизонтали.",
    "repeat-x": "Фоновое изображение повторяется только по горизонтали.",
    "repeat-y": "Фоновое изображение повторяется только по вертикали.",
    "no-repeat": "Фоновое изображение не повторяется.",
    "space": "Фоновое изображение повторяется максимально возможное количество раз без обрезки. Изображения равномерно распределены.",
    "round": "Фоновое изображение повторяется и сжимается или растягивается, чтобы заполнить пространство.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "display": {
    "inline": "Отображает элемент как встроенный элемент (как <span>).",
    "block": "Отображает элемент как блочный элемент (как <p>).",
    "contents": "Заставляет контейнер исчезнуть, делая дочерние элементы дочерними элементами родителя элемента.",
    "flex": "Отображает элемент как блочный flex-контейнер.",
    "grid": "Отображает элемент как блочный grid-контейнер.",
    "inline-block": "Отображает элемент как встроенный блочный контейнер.",
    "inline-flex": "Отображает элемент как встроенный flex-контейнер.",
    "inline-grid": "Отображает элемент как встроенный grid-контейнер.",
    "inline-table": "Элемент отображается как встроенная таблица.",
    "list-item": "Элемент ведёт себя как элемент <li>.",
    "run-in": "Отображает элемент как блочный или встроенный, в зависимости от контекста.",
    "table": "Элемент ведёт себя как элемент <table>.",
    "table-caption": "Элемент ведёт себя как элемент <caption>.",
    "table-column-group": "Элемент ведёт себя как элемент <colgroup>.",
    "table-header-group": "Элемент ведёт себя как элемент <thead>.",
    "table-footer-group": "Элемент ведёт себя как элемент <tfoot>.",
    "table-row-group": "Элемент ведёт себя как элемент <tbody>.",
    "table-cell": "Элемент ведёт себя как элемент <td>.",
    "table-column": "Элемент ведёт себя как элемент <col>.",
    "table-row": "Элемент ведёт себя как элемент <tr>.",
    "none": "Элемент полностью удаляется.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "position": {
    "static": "Значение по умолчанию. Элементы позиционируются в соответствии с нормальным потоком документа.",
    "relative": "Элемент позиционируется относительно своего нормального положения.",
    "absolute": "Элемент позиционируется относительно ближайшего позиционированного предка.",
    "fixed": "Элемент позиционируется относительно окна браузера.",
    "sticky": "Элемент позиционируется на основе положения прокрутки пользователя (гибрид relative и fixed).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "justify-content": {
    "center": "Элементы центрированы в контейнере.",
    "flex-start": "Значение по умолчанию. Элементы располагаются в начале контейнера.",
    "flex-end": "Элементы располагаются в конце контейнера.",
    "space-between": "Элементы располагаются с пространством между строками.",
    "space-around": "Элементы располагаются с пространством до, между и после строк.",
    "space-evenly": "Элементы распределяются так, что расстояние между любыми двумя соседними элементами одинаково.",
    "inherit": "Наследует значение от родительского элемента.",
    "initial": "Устанавливает значение свойства в значение по умолчанию."
  },
  "background-size": {
    "auto": "Значение по умолчанию. Фоновое изображение отображается в своём оригинальном размере.",
    "length": "Устанавливает ширину и высоту фонового изображения (например, 50px 100px).",
    "percentage": "Устанавливает ширину и высоту фонового изображения в процентах от родительского элемента (например, 50% 100%).",
    "cover": "Масштабирует фоновое изображение, чтобы покрыть весь контейнер, даже если для этого нужно растянуть или обрезать изображение.",
    "contain": "Масштабирует фоновое изображение, чтобы оно помещалось внутри контейнера, даже если это приводит к появлению пустого пространства.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border": {
    "border-width": "Определяет ширину границы (например, thin, medium, thick или конкретный размер, как 1px).",
    "border-style": "Определяет стиль границы (например, solid, dotted, dashed).",
    "border-color": "Определяет цвет границы (например, red, #FF0000).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-bottom": {
    "border-bottom-width": "Определяет ширину нижней границы.",
    "border-bottom-style": "Определяет стиль нижней границы.",
    "border-bottom-color": "Определяет цвет нижней границы.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-bottom-color": {
    "color": "Определяет цвет нижней границы (например, red, #FF0000, rgb(255,0,0)).",
    "transparent": "Определяет, что цвет нижней границы должен быть прозрачным.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-bottom-left-radius": {
    "length": "Определяет радиус нижнего левого угла (например, 10px).",
    "percentage": "Определяет радиус нижнего левого угла в процентах (например, 10%).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-bottom-right-radius": {
    "length": "Определяет радиус нижнего правого угла (например, 10px).",
    "percentage": "Определяет радиус нижнего правого угла в процентах (например, 10%).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-bottom-style": {
    "none": "Значение по умолчанию. Граница не отображается.",
    "hidden": "То же, что и none, за исключением разрешения конфликтов границ для элементов таблицы.",
    "dotted": "Определяет пунктирную границу.",
    "dashed": "Определяет штриховую границу.",
    "solid": "Определяет сплошную границу.",
    "double": "Определяет двойную границу.",
    "groove": "Определяет трёхмерную вдавленную границу. Эффект зависит от значения border-color.",
    "ridge": "Определяет трёхмерную выпуклую границу. Эффект зависит от значения border-color.",
    "inset": "Определяет трёхмерную вдавленную границу. Эффект зависит от значения border-color.",
    "outset": "Определяет трёхмерную выпуклую границу. Эффект зависит от значения border-color.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-bottom-width": {
    "medium": "Значение по умолчанию. Определяет среднюю границу.",
    "thin": "Определяет тонкую границу.",
    "thick": "Определяет толстую границу.",
    "length": "Определяет ширину нижней границы (например, 1px, 0.1em).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-collapse": {
    "separate": "Значение по умолчанию. Границы отделены (стандартный HTML).",
    "collapse": "Границы объединяются в единую границу, где это возможно.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-color": {
    "color": "Определяет цвет четырёх границ (например, red, #FF0000, rgb(255,0,0)).",
    "transparent": "Определяет, что цвет границы должен быть прозрачным.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-image": {
    "border-image-source": "Определяет путь к изображению, которое будет использоваться в качестве границы.",
    "border-image-slice": "Определяет, как нарезать изображение границы.",
    "border-image-width": "Определяет ширину изображения границы.",
    "border-image-outset": "Определяет величину, на которую область изображения границы выходит за пределы блока границы.",
    "border-image-repeat": "Определяет, должно ли изображение границы повторяться, закругляться или растягиваться.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-image-outset": {
    "length": "Определяет величину, на которую область изображения границы выходит за пределы блока границы (например, 1px, 2cm).",
    "number": "Число является множителем border-width (например, 1, 2).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-image-repeat": {
    "stretch": "Значение по умолчанию. Изображение растягивается, чтобы заполнить область.",
    "repeat": "Изображение повторяется (мозаика), чтобы заполнить область.",
    "round": "Изображение повторяется (мозаика), чтобы заполнить область. Если оно не помещается точно, оно масштабируется для соответствия.",
    "space": "Изображение повторяется (мозаика), чтобы заполнить область. Если оно не помещается точно, свободное пространство распределяется между плитками.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-image-slice": {
    "number": "Число представляет пиксели для растровых изображений и координаты для векторных изображений (например, 30).",
    "percentage": "Процент относительно размера изображения (например, 30%).",
    "fill": "Вызывает отображение средней части изображения границы.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-image-source": {
    "none": "Значение по умолчанию. Изображение границы не используется.",
    "image": "URL изображения, которое будет использовано в качестве границы (например, url('border.png')).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-image-width": {
    "number": "Представляет множитель соответствующей ширины границы (например, 3).",
    "percentage": "Относительно ширины/высоты области изображения границы (например, 10%).",
    "length": "Ширина в абсолютных единицах (например, 20px).",
    "auto": "Если указано, ширина будет собственной шириной или высотой соответствующего фрагмента изображения.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-left": {
    "border-left-width": "Задает ширину левой границы.",
    "border-left-style": "Задает стиль левой границы.",
    "border-left-color": "Задает цвет левой границы.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-left-color": {
    "color": "Задает цвет левой границы (например, red, #FF0000, rgb(255,0,0)).",
    "transparent": "Задает прозрачный цвет левой границы.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-left-style": {
    "none": "Значение по умолчанию. Граница не определена.",
    "hidden": "То же, что и none, за исключением разрешения конфликтов границ для элементов таблицы.",
    "dotted": "Определяет точечную границу.",
    "dashed": "Определяет пунктирную границу.",
    "solid": "Определяет сплошную границу.",
    "double": "Определяет двойную границу.",
    "groove": "Определяет 3D вдавленную границу. Эффект зависит от значения border-color.",
    "ridge": "Определяет 3D выпуклую границу. Эффект зависит от значения border-color.",
    "inset": "Определяет 3D вдавленную границу. Эффект зависит от значения border-color.",
    "outset": "Определяет 3D выпуклую границу. Эффект зависит от значения border-color.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-left-width": {
    "medium": "Значение по умолчанию. Определяет среднюю ширину границы.",
    "thin": "Определяет тонкую границу.",
    "thick": "Определяет толстую границу.",
    "length": "Определяет ширину левой границы (например, 1px, 0.1em).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-radius": {
    "length": "Определяет радиус четырех углов (например, 10px).",
    "percentage": "Определяет радиус четырех углов в процентах (например, 10%).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-right": {
    "border-right-width": "Задает ширину правой границы.",
    "border-right-style": "Задает стиль правой границы.",
    "border-right-color": "Задает цвет правой границы.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-right-color": {
    "color": "Задает цвет правой границы (например, red, #FF0000, rgb(255,0,0)).",
    "transparent": "Задает прозрачный цвет правой границы.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-right-style": {
    "none": "Значение по умолчанию. Граница не определена.",
    "hidden": "То же, что и none, за исключением разрешения конфликтов границ для элементов таблицы.",
    "dotted": "Определяет точечную границу.",
    "dashed": "Определяет пунктирную границу.",
    "solid": "Определяет сплошную границу.",
    "double": "Определяет двойную границу.",
    "groove": "Определяет 3D вдавленную границу. Эффект зависит от значения border-color.",
    "ridge": "Определяет 3D выпуклую границу. Эффект зависит от значения border-color.",
    "inset": "Определяет 3D вдавленную границу. Эффект зависит от значения border-color.",
    "outset": "Определяет 3D выпуклую границу. Эффект зависит от значения border-color.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-right-width": {
    "medium": "Значение по умолчанию. Определяет среднюю ширину границы.",
    "thin": "Определяет тонкую границу.",
    "thick": "Определяет толстую границу.",
    "length": "Определяет ширину правой границы (например, 1px, 0.1em).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-spacing": {
    "length": "Определяет расстояние между соседними ячейками (например, 2px, 0.5em).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-style": {
    "none": "Значение по умолчанию. Граница не определена.",
    "hidden": "То же, что и none, за исключением разрешения конфликтов границ для элементов таблицы.",
    "dotted": "Определяет точечную границу.",
    "dashed": "Определяет пунктирную границу.",
    "solid": "Определяет сплошную границу.",
    "double": "Определяет двойную границу.",
    "groove": "Определяет 3D вдавленную границу. Эффект зависит от значения border-color.",
    "ridge": "Определяет 3D выпуклую границу. Эффект зависит от значения border-color.",
    "inset": "Определяет 3D вдавленную границу. Эффект зависит от значения border-color.",
    "outset": "Определяет 3D выпуклую границу. Эффект зависит от значения border-color.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-top": {
    "border-top-width": "Задает ширину верхней границы.",
    "border-top-style": "Задает стиль верхней границы.",
    "border-top-color": "Задает цвет верхней границы.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-top-color": {
    "color": "Задает цвет верхней границы (например, red, #FF0000, rgb(255,0,0)).",
    "transparent": "Задает прозрачный цвет верхней границы.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-top-left-radius": {
    "length": "Определяет радиус верхнего левого угла (например, 10px).",
    "percentage": "Определяет радиус верхнего левого угла в процентах (например, 10%).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-top-right-radius": {
    "length": "Определяет радиус верхнего правого угла (например, 10px).",
    "percentage": "Определяет радиус верхнего правого угла в процентах (например, 10%).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-top-style": {
    "none": "Значение по умолчанию. Граница не определена.",
    "hidden": "То же, что и none, за исключением разрешения конфликтов границ для элементов таблицы.",
    "dotted": "Определяет точечную границу.",
    "dashed": "Определяет пунктирную границу.",
    "solid": "Определяет сплошную границу.",
    "double": "Определяет двойную границу.",
    "groove": "Определяет 3D вдавленную границу. Эффект зависит от значения border-color.",
    "ridge": "Определяет 3D выпуклую границу. Эффект зависит от значения border-color.",
    "inset": "Определяет 3D вдавленную границу. Эффект зависит от значения border-color.",
    "outset": "Определяет 3D выпуклую границу. Эффект зависит от значения border-color.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-top-width": {
    "medium": "Значение по умолчанию. Определяет среднюю ширину границы.",
    "thin": "Определяет тонкую границу.",
    "thick": "Определяет толстую границу.",
    "length": "Определяет ширину верхней границы (например, 1px, 0.1em).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "border-width": {
    "medium": "Значение по умолчанию. Определяет среднюю ширину границы.",
    "thin": "Определяет тонкую границу.",
    "thick": "Определяет толстую границу.",
    "length": "Определяет ширину границы (например, 1px, 0.1em).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "bottom": {
    "auto": "Значение по умолчанию. Браузер вычисляет положение снизу.",
    "length": "Задает положение снизу в px, cm и т.д. Допускаются отрицательные значения.",
    "percentage": "Задает положение снизу в процентах от содержащего элемента. Допускаются отрицательные значения.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "box-shadow": {
    "none": "Значение по умолчанию. Тень не отображается.",
    "h-offset": "Обязательно. Горизонтальное смещение тени. Положительное значение размещает тень справа от блока, отрицательное значение размещает тень слева от блока.",
    "v-offset": "Обязательно. Вертикальное смещение тени. Положительное значение размещает тень ниже блока, отрицательное значение размещает тень выше блока.",
    "blur": "Необязательно. Радиус размытия. Чем больше число, тем более размытой будет тень.",
    "spread": "Необязательно. Радиус растяжения. Положительное значение увеличивает размер тени, отрицательное значение уменьшает размер тени.",
    "color": "Необязательно. Цвет тени. Значение по умолчанию – цвет текста.",
    "inset": "Необязательно. Меняет тень с внешней (outset) на внутреннюю.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "box-sizing": {
    "content-box": "Значение по умолчанию. Свойства width и height включают только содержимое. Граница и отступ не включены.",
    "border-box": "Свойства width и height включают содержимое, отступ и границу.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "caption-side": {
    "top": "Значение по умолчанию. Заголовок размещается над таблицей.",
    "bottom": "Заголовок размещается под таблицей.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "clear": {
    "none": "Значение по умолчанию. Разрешает плавающие элементы с обеих сторон.",
    "left": "Запрещает плавающие элементы с левой стороны.",
    "right": "Запрещает плавающие элементы с правой стороны.",
    "both": "Запрещает плавающие элементы с обеих сторон.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "clip": {
    "auto": "Значение по умолчанию. Обрезка не применяется.",
    "shape": "Задает форму обрезки. Поддерживается только прямоугольник: rect (top, right, bottom, left).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "color": {
    "color": "Задает цвет текста (например, red, #FF0000, rgb(255,0,0)).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "column-count": {
    "auto": "Значение по умолчанию. Количество колонок будет определяться другими свойствами, такими как column-width.",
    "number": "Определяет количество колонок, на которые должен быть разделен элемент (например, 3).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "column-fill": {
    "balance": "Значение по умолчанию. Колонки заполняются равномерно.",
    "auto": "Колонки заполняются последовательно.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "column-gap": {
    "normal": "Значение по умолчанию. Задает нормальный промежуток между колонками (1em).",
    "length": "Задает промежуток между колонками (например, 30px, 2em).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "column-rule": {
    "column-rule-width": "Задает ширину линии между колонками.",
    "column-rule-style": "Задает стиль линии между колонками.",
    "column-rule-color": "Задает цвет линии между колонками.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "column-rule-color": {
    "color": "Задает цвет линии между колонками (например, red, #FF0000, rgb(255,0,0)).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "column-rule-style": {
    "none": "Значение по умолчанию. Линия не отображается.",
    "hidden": "То же, что и none, за исключением разрешения конфликтов границ для элементов таблицы.",
    "dotted": "Определяет точечную линию.",
    "dashed": "Определяет пунктирную линию.",
    "solid": "Определяет сплошную линию.",
    "double": "Определяет двойную линию.",
    "groove": "Определяет 3D вдавленную линию. Эффект зависит от значения column-rule-color.",
    "ridge": "Определяет 3D выпуклую линию. Эффект зависит от значения column-rule-color.",
    "inset": "Определяет 3D вдавленную линию. Эффект зависит от значения column-rule-color.",
    "outset": "Определяет 3D выпуклую линию. Эффект зависит от значения column-rule-color.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "column-rule-width": {
    "medium": "Значение по умолчанию. Определяет среднюю ширину линии.",
    "thin": "Определяет тонкую линию.",
    "thick": "Определяет толстую линию.",
    "length": "Определяет ширину линии (например, 1px, 0.1em).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "column-span": {
    "none": "Значение по умолчанию. Элемент не охватывает колонки.",
    "all": "Элемент охватывает все колонки.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "column-width": {
    "auto": "Значение по умолчанию. Ширина колонки будет определена браузером.",
    "length": "Задает ширину колонок (например, 100px, 10em).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "columns": {
    "column-width": "Задает ширину колонок.",
    "column-count": "Задает количество колонок, на которые должен быть разделен элемент.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "content": {
    "normal": "Значение по умолчанию. Устанавливает содержимое в его нормальное поведение.",
    "none": "Устанавливает пустое содержимое.",
    "counter": "Устанавливает содержимое как счетчик (например, counter(name)).",
    "attr(attribute)": "Устанавливает содержимое как значение атрибута элемента.",
    "string": "Устанавливает содержимое как указанную строку.",
    "open-quote": "Устанавливает содержимое как открывающую кавычку.",
    "close-quote": "Устанавливает содержимое как закрывающую кавычку.",
    "no-open-quote": "Удаляет открывающую кавычку из содержимого.",
    "no-close-quote": "Удаляет закрывающую кавычку из содержимого.",
    "url(url)": "Устанавливает содержимое как внешний ресурс (например, изображение).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "counter-increment": {
    "none": "Значение по умолчанию. Счетчик не увеличивается.",
    "id": "ID счетчика для увеличения.",
    "number": "Значение увеличения (например, 1, 2 и т.д.).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "counter-reset": {
    "none": "Значение по умолчанию. Счетчик не сбрасывается.",
    "id": "ID счетчика для сброса.",
    "number": "Значение, к которому сбрасывается счетчик (например, 0, 1 и т.д.).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "cursor": {
    "alias": "Курсор указывает, что будет создан псевдоним или ярлык.",
    "all-scroll": "Курсор указывает, что что-то может быть прокручено в любом направлении.",
    "auto": "Значение по умолчанию. Браузер устанавливает курсор.",
    "cell": "Курсор указывает, что ячейка или набор ячеек могут быть выбраны.",
    "context-menu": "Курсор указывает, что доступно контекстное меню.",
    "col-resize": "Курсор указывает, что столбец можно изменить по горизонтали.",
    "copy": "Курсор указывает, что что-то должно быть скопировано.",
    "crosshair": "Курсор в виде перекрестия.",
    "default": "Курсор по умолчанию, обычно стрелка.",
    "e-resize": "Курсор указывает, что край рамки должен быть перемещен вправо.",
    "ew-resize": "Курсор указывает на двунаправленное изменение размера (восток-запад).",
    "grab": "Курсор указывает, что что-то можно захватить.",
    "grabbing": "Курсор указывает, что что-то захватывается.",
    "help": "Курсор указывает, что доступна справка.",
    "move": "Курсор указывает, что что-то должно быть перемещено.",
    "n-resize": "Курсор указывает, что край рамки должен быть перемещен вверх.",
    "ne-resize": "Курсор указывает, что край рамки должен быть перемещен вверх и вправо.",
    "nesw-resize": "Курсор указывает на двунаправленное изменение размера (северо-восток-юго-запад).",
    "ns-resize": "Курсор указывает на двунаправленное изменение размера (север-юг).",
    "nw-resize": "Курсор указывает, что край рамки должен быть перемещен вверх и влево.",
    "nwse-resize": "Курсор указывает на двунаправленное изменение размера (северо-запад-юго-восток).",
    "no-drop": "Курсор указывает, что перетаскиваемый элемент нельзя сбросить здесь.",
    "not-allowed": "Курсор указывает, что запрошенное действие не будет выполнено.",
    "pointer": "Курсор в виде указателя, обозначающего ссылку.",
    "progress": "Курсор указывает, что программа занята, но пользователь все еще может взаимодействовать с ней.",
    "row-resize": "Курсор указывает, что строку можно изменить по вертикали.",
    "s-resize": "Курсор указывает, что край рамки должен быть перемещен вниз.",
    "se-resize": "Курсор указывает, что край рамки должен быть перемещен вниз и вправо.",
    "sw-resize": "Курсор указывает, что край рамки должен быть перемещен вниз и влево.",
    "text": "Курсор указывает текст, который может быть выбран.",
    "url(url)": "Пользовательский курсор (например, url('cursor.png')).",
    "w-resize": "Курсор указывает, что край рамки должен быть перемещен влево.",
    "wait": "Курсор указывает, что программа занята.",
    "zoom-in": "Курсор указывает, что что-то можно увеличить.",
    "zoom-out": "Курсор указывает, что что-то можно уменьшить.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "direction": {
    "ltr": "Значение по умолчанию. Направление текста слева направо.",
    "rtl": "Направление текста справа налево.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "empty-cells": {
    "show": "Значение по умолчанию. Границы и фоны отображаются.",
    "hide": "Границы и фоны не отображаются.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "filter": {
    "none": "Значение по умолчанию. Эффекты фильтра не применяются.",
    "blur()": "Применяет эффект размытия к элементу (например, blur(5px)).",
    "brightness()": "Регулирует яркость элемента (например, brightness(200%)).",
    "contrast()": "Регулирует контрастность элемента (например, contrast(200%)).",
    "drop-shadow()": "Применяет эффект тени к элементу (например, drop-shadow(8px 8px 10px gray)).",
    "grayscale()": "Преобразует элемент в оттенки серого (например, grayscale(100%)).",
    "hue-rotate()": "Применяет поворот оттенка к элементу (например, hue-rotate(90deg)).",
    "invert()": "Инвертирует цвета элемента (например, invert(100%)).",
    "opacity()": "Устанавливает прозрачность элемента (например, opacity(50%)).",
    "saturate()": "Насыщает элемент (например, saturate(200%)).",
    "sepia()": "Преобразует элемент в сепию (например, sepia(100%)).",
    "url()": "Использует фильтр из SVG-файла (например, url('filters.svg#filter-id')).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "flex": {
    "flex-grow": "Определяет, насколько элемент будет расти относительно других гибких элементов.",
    "flex-shrink": "Определяет, насколько элемент будет сжиматься относительно других гибких элементов.",
    "flex-basis": "Определяет начальную длину гибкого элемента.",
    "auto": "То же, что и 1 1 auto.",
    "initial": "То же, что и 0 1 auto. Устанавливает значение свойства в значение по умолчанию.",
    "none": "То же, что и 0 0 auto.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "flex-basis": {
    "auto": "Значение по умолчанию. Длина равна длине гибкого элемента. Если элемент не имеет длины, длина будет определяться его содержимым.",
    "length": "Единица длины, такая как px, em, rem и т. д. (например, 20px, 5em).",
    "percentage": "Процент от ширины родительского элемента.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "flex-direction": {
    "row": "Значение по умолчанию. Flex-элементы располагаются горизонтально, слева направо.",
    "row-reverse": "Flex-элементы располагаются горизонтально, справа налево.",
    "column": "Flex-элементы располагаются вертикально, сверху вниз.",
    "column-reverse": "Flex-элементы располагаются вертикально, снизу вверх.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "flex-flow": {
    "flex-direction": "Определяет направление гибких элементов.",
    "flex-wrap": "Определяет, должны ли гибкие элементы переноситься или нет.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "flex-grow": {
    "number": "Число, определяющее, насколько элемент будет расти относительно других гибких элементов (например, 0, 1, 2 и т. д.).",
    "initial": "Устанавливает значение свойства в значение по умолчанию (0).",
    "inherit": "Наследует значение от родительского элемента."
  },
  "flex-shrink": {
    "number": "Число, определяющее, насколько элемент будет сжиматься относительно других гибких элементов (например, 0, 1, 2 и т. д.).",
    "initial": "Устанавливает значение свойства в значение по умолчанию (1).",
    "inherit": "Наследует значение от родительского элемента."
  },
  "flex-wrap": {
    "nowrap": "Значение по умолчанию. Гибкие элементы не переносятся.",
    "wrap": "Гибкие элементы переносятся при необходимости.",
    "wrap-reverse": "Гибкие элементы переносятся при необходимости в обратном порядке.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "float": {
    "none": "Значение по умолчанию. Элемент не плавает.",
    "left": "Элемент плавает влево.",
    "right": "Элемент плавает вправо.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "font": {
    "font-style": "Определяет стиль шрифта (например, normal, italic, oblique).",
    "font-variant": "Определяет вариант шрифта (например, normal, small-caps).",
    "font-weight": "Определяет толщину шрифта (например, normal, bold, 900).",
    "font-size": "Определяет размер шрифта (например, 12px, 1em, 80%).",
    "line-height": "Определяет высоту строки (например, normal, 1.5, 200%).",
    "font-family": "Определяет семейство шрифтов (например, 'Arial', 'Helvetica', sans-serif).",
    "caption": "Использует настройки шрифта для элементов заголовка.",
    "icon": "Использует настройки шрифта для меток значков.",
    "menu": "Использует настройки шрифта для выпадающих меню.",
    "message-box": "Использует настройки шрифта для диалоговых окон.",
    "small-caption": "Использует настройки шрифта для элементов маленьких заголовков.",
    "status-bar": "Использует настройки шрифта для строк состояния.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "font-family": {
    "family-name": "Указывает имя семейства шрифтов (например, 'Times New Roman', Arial).",
    "generic-family": "Указывает имя общего семейства шрифтов (например, serif, sans-serif, monospace, cursive, fantasy).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "font-size": {
    "medium": "Значение по умолчанию. Устанавливает размер шрифта на средний размер.",
    "xx-small": "Устанавливает размер шрифта на очень-очень маленький размер.",
    "x-small": "Устанавливает размер шрифта на очень маленький размер.",
    "small": "Устанавливает размер шрифта на маленький размер.",
    "large": "Устанавливает размер шрифта на большой размер.",
    "x-large": "Устанавливает размер шрифта на очень большой размер.",
    "xx-large": "Устанавливает размер шрифта на очень-очень большой размер.",
    "smaller": "Устанавливает размер шрифта на размер меньше, чем у родительского элемента.",
    "larger": "Устанавливает размер шрифта на размер больше, чем у родительского элемента.",
    "length": "Устанавливает размер шрифта на фиксированный размер в px, cm и т. д.",
    "percentage": "Устанавливает размер шрифта в процентах от размера шрифта родительского элемента.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "font-size-adjust": {
    "none": "Значение по умолчанию. Размер шрифта не корректируется.",
    "number": "Определяет значение аспекта, которое будет использоваться (например, 0.5).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "font-stretch": {
    "normal": "Значение по умолчанию. Текст отображается нормально.",
    "ultra-condensed": "Делает текст максимально сжатым.",
    "extra-condensed": "Делает текст более сжатым, чем condensed.",
    "condensed": "Делает текст более сжатым, чем semi-condensed.",
    "semi-condensed": "Делает текст более сжатым, чем normal.",
    "semi-expanded": "Делает текст более расширенным, чем normal.",
    "expanded": "Делает текст более расширенным, чем semi-expanded.",
    "extra-expanded": "Делает текст более расширенным, чем expanded.",
    "ultra-expanded": "Делает текст максимально расширенным.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "font-style": {
    "normal": "Значение по умолчанию. Текст отображается нормально.",
    "italic": "Текст отображается курсивом.",
    "oblique": "Текст 'наклонен' (oblique очень похож на italic, но менее поддерживается).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "font-variant": {
    "normal": "Значение по умолчанию. Текст отображается нормально.",
    "small-caps": "Текст отображается малыми прописными буквами.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "font-weight": {
    "normal": "Значение по умолчанию. Нормальная толщина шрифта.",
    "bold": "Жирная толщина шрифта.",
    "bolder": "Более жирная толщина шрифта, чем у родительского элемента.",
    "lighter": "Более светлая толщина шрифта, чем у родительского элемента.",
    "100": "Устанавливает определенную толщину шрифта - эквивалент 'thin'.",
    "200": "Устанавливает определенную толщину шрифта - эквивалент 'extra-light'.",
    "300": "Устанавливает определенную толщину шрифта - эквивалент 'light'.",
    "400": "Устанавливает определенную толщину шрифта - эквивалент 'normal'.",
    "500": "Устанавливает определенную толщину шрифта - эквивалент 'medium'.",
    "600": "Устанавливает определенную толщину шрифта - эквивалент 'semi-bold'.",
    "700": "Устанавливает определенную толщину шрифта - эквивалент 'bold'.",
    "800": "Устанавливает определенную толщину шрифта - эквивалент 'extra-bold'.",
    "900": "Устанавливает определенную толщину шрифта - эквивалент 'black'.",
    "inherit": "Наследует значение от родительского элемента.",
    "initial": "Устанавливает значение свойства в значение по умолчанию."
  },
  "hanging-punctuation": {
    "none": "Значение по умолчанию. Висячая пунктуация не используется.",
    "first": "Первый знак пунктуации висит в начале первой строки.",
    "last": "Последний знак пунктуации висит в конце последней строки.",
    "allow-end": "Разрешает знаку пунктуации висеть в конце строки.",
    "force-end": "Заставляет знак пунктуации висеть в конце строки.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "height": {
    "auto": "Значение по умолчанию. Браузер вычисляет высоту.",
    "length": "Определяет высоту в px, cm и т. д.",
    "percentage": "Определяет высоту в процентах от содержащего блока.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "hyphens": {
    "none": "Слова не разбиваются на переносы строк, даже если символы внутри слов предлагают точки переноса строки.",
    "manual": "Слова разбиваются на переносы строк только там, где символы внутри слова предлагают возможности переноса строки.",
    "auto": "Слова могут быть разбиты в соответствующих точках переноса, определенных символами внутри слова или по поиску в словаре.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "left": {
    "auto": "Значение по умолчанию. Браузер вычисляет положение слева.",
    "length": "Указывает положение слева в px, cm и т.д. Допускаются отрицательные значения.",
    "percentage": "Указывает положение слева в процентах от содержащего элемента. Допускаются отрицательные значения.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "letter-spacing": {
    "normal": "Значение по умолчанию. Без дополнительного пространства между символами.",
    "length": "Определяет дополнительное пространство между символами (например, 2px, 0.5em).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "line-height": {
    "normal": "Значение по умолчанию. Зависит от браузера, но обычно около 1.2.",
    "number": "Число, которое будет умножено на текущий размер шрифта для установки высоты строки.",
    "length": "Фиксированная высота строки в px, pt, cm и т.д.",
    "percentage": "Высота строки в процентах от текущего размера шрифта.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "list-style": {
    "list-style-type": "Указывает тип маркера элемента списка.",
    "list-style-position": "Указывает положение маркера элемента списка.",
    "list-style-image": "Указывает изображение в качестве маркера элемента списка.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "list-style-image": {
    "none": "Значение по умолчанию. Изображение не будет использоваться в качестве маркера элемента списка.",
    "url": "Путь к изображению, которое будет использоваться в качестве маркера элемента списка (например, url('arrow.png')).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "list-style-position": {
    "outside": "Значение по умолчанию. Маркеры будут располагаться за пределами элемента списка.",
    "inside": "Маркеры будут располагаться внутри элемента списка.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "list-style-type": {
    "disc": "Значение по умолчанию. Маркер в виде заполненного круга.",
    "armenian": "Маркер в виде традиционной армянской нумерации.",
    "circle": "Маркер в виде окружности.",
    "cjk-ideographic": "Маркер в виде простых идеографических чисел.",
    "decimal": "Маркер в виде числа.",
    "decimal-leading-zero": "Маркер в виде числа с ведущими нулями (01, 02, 03 и т.д.).",
    "georgian": "Маркер в виде традиционной грузинской нумерации.",
    "hebrew": "Маркер в виде традиционной еврейской нумерации.",
    "hiragana": "Маркер в виде традиционной нумерации хирагана.",
    "hiragana-iroha": "Маркер в виде традиционной нумерации хирагана-ироха.",
    "katakana": "Маркер в виде традиционной нумерации катакана.",
    "katakana-iroha": "Маркер в виде традиционной нумерации катакана-ироха.",
    "lower-alpha": "Маркер в виде строчных букв (a, b, c, d и т.д.).",
    "lower-greek": "Маркер в виде строчных греческих букв.",
    "lower-latin": "Маркер в виде строчных латинских букв (a, b, c, d и т.д.).",
    "lower-roman": "Маркер в виде строчных римских цифр (i, ii, iii, iv, v и т.д.).",
    "none": "Маркер не отображается.",
    "square": "Маркер в виде квадрата.",
    "upper-alpha": "Маркер в виде заглавных букв (A, B, C, D и т.д.).",
    "upper-greek": "Маркер в виде заглавных греческих букв.",
    "upper-latin": "Маркер в виде заглавных латинских букв (A, B, C, D и т.д.).",
    "upper-roman": "Маркер в виде заглавных римских цифр (I, II, III, IV, V и т.д.).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "margin": {
    "length": "Указывает фиксированный отступ в px, pt, cm и т.д.",
    "percentage": "Указывает отступ в процентах от ширины содержащего элемента.",
    "auto": "Браузер вычисляет отступ.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "margin-bottom": {
    "length": "Указывает фиксированный нижний отступ в px, pt, cm и т.д.",
    "percentage": "Указывает нижний отступ в процентах от ширины содержащего элемента.",
    "auto": "Браузер вычисляет нижний отступ.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "margin-left": {
    "length": "Указывает фиксированный левый отступ в px, pt, cm и т.д.",
    "percentage": "Указывает левый отступ в процентах от ширины содержащего элемента.",
    "auto": "Браузер вычисляет левый отступ.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "margin-right": {
    "length": "Указывает фиксированный правый отступ в px, pt, cm и т.д.",
    "percentage": "Указывает правый отступ в процентах от ширины содержащего элемента.",
    "auto": "Браузер вычисляет правый отступ.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "margin-top": {
    "length": "Указывает фиксированный верхний отступ в px, pt, cm и т.д.",
    "percentage": "Указывает верхний отступ в процентах от ширины содержащего элемента.",
    "auto": "Браузер вычисляет верхний отступ.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "max-height": {
    "none": "Значение по умолчанию. Без максимальной высоты.",
    "length": "Определяет максимальную высоту в px, cm и т.д.",
    "percentage": "Определяет максимальную высоту в процентах от содержащего блока.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "max-width": {
    "none": "Значение по умолчанию. Без максимальной ширины.",
    "length": "Определяет максимальную ширину в px, cm и т.д.",
    "percentage": "Определяет максимальную ширину в процентах от содержащего блока.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "min-height": {
    "length": "Определяет минимальную высоту в px, cm и т.д.",
    "percentage": "Определяет минимальную высоту в процентах от содержащего блока.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "min-width": {
    "length": "Определяет минимальную ширину в px, cm и т.д.",
    "percentage": "Определяет минимальную ширину в процентах от содержащего блока.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "opacity": {
    "number": "Указывает прозрачность. Число от 0.0 (полностью прозрачный) до 1.0 (полностью непрозрачный).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "order": {
    "number": "Указывает порядок гибкого элемента относительно остальных гибких элементов (например, 0, 1, 2 и т.д.).",
    "initial": "Устанавливает значение свойства по умолчанию (0).",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "orphans": {
    "number": "Указывает минимальное количество строк, которые должны оставаться внизу страницы при разрыве страницы (например, 2, 3 и т.д.).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "outline": {
    "outline-width": "Указывает ширину контура.",
    "outline-style": "Указывает стиль контура.",
    "outline-color": "Указывает цвет контура.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "outline-color": {
    "color": "Устанавливает цвет контура (можно использовать названия цветов, шестнадцатеричные значения, RGB и т.д.).",
    "invert": "Выполняет инверсию цвета контура (обеспечивает видимость контура независимо от фона).",
    "transparent": "Делает контур прозрачным.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "outline-offset": {
    "<length>": "Указывает расстояние между контуром и краем элемента (можно использовать px, em, rem и т.д.).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "outline-style": {
    "none": "Контур не отображается.",
    "hidden": "То же, что и 'none'.",
    "dotted": "Определяет точечный контур.",
    "dashed": "Определяет пунктирный контур.",
    "solid": "Определяет сплошной контур.",
    "double": "Определяет двойной контур.",
    "groove": "Определяет вдавленный контур (выглядит 3D).",
    "ridge": "Определяет выпуклый контур (выглядит 3D).",
    "inset": "Определяет вдавленный контур (выглядит 3D).",
    "outset": "Определяет выпуклый контур (выглядит 3D).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "outline-width": {
    "thin": "Устанавливает тонкий контур.",
    "medium": "Устанавливает средний контур (по умолчанию).",
    "thick": "Устанавливает толстый контур.",
    "<length>": "Устанавливает ширину с использованием конкретного значения длины (px, em, rem и т.д.).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "overflow": {
    "visible": "Содержимое выходит за пределы блока элемента (по умолчанию).",
    "hidden": "Содержимое, которое выходит за пределы, обрезается и не видно.",
    "scroll": "Содержимое, которое выходит за пределы, обрезается, но полосы прокрутки всегда отображаются.",
    "auto": "Содержимое, которое выходит за пределы, обрезается, и полосы прокрутки появляются только при необходимости.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "overflow-wrap": {
    "normal": "Слова переносятся только в разрешенных точках переноса (по умолчанию).",
    "break-word": "При необходимости слова будут переноситься в произвольных точках, чтобы предотвратить переполнение.",
    "anywhere": "Похоже на break-word, но с различным поведением для измерения строк и переноса текста.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "overflow-x": {
    "visible": "Горизонтальное содержимое выходит за пределы блока элемента (по умолчанию).",
    "hidden": "Горизонтальное содержимое, которое выходит за пределы, обрезается и не видно.",
    "scroll": "Горизонтальное содержимое, которое выходит за пределы, обрезается, но полоса прокрутки всегда отображается.",
    "auto": "Горизонтальное содержимое, которое выходит за пределы, обрезается, и полоса прокрутки появляется только при необходимости.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "overflow-y": {
    "visible": "Вертикальное содержимое выходит за пределы блока элемента (по умолчанию).",
    "hidden": "Вертикальное содержимое, которое выходит за пределы, обрезается и не видно.",
    "scroll": "Вертикальное содержимое, которое выходит за пределы, обрезается, но полоса прокрутки всегда отображается.",
    "auto": "Вертикальное содержимое, которое выходит за пределы, обрезается, и полоса прокрутки появляется только при необходимости.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "padding": {
    "<length>": "Указывает отступ, используя значение длины (px, em, rem и т.д.).",
    "<percentage>": "Указывает отступ в процентах от ширины содержащего элемента.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "padding-bottom": {
    "<length>": "Указывает нижний отступ, используя значение длины (px, em, rem и т.д.).",
    "<percentage>": "Указывает нижний отступ в процентах от ширины содержащего элемента.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "padding-left": {
    "<length>": "Указывает левый отступ, используя значение длины (px, em, rem и т.д.).",
    "<percentage>": "Указывает левый отступ в процентах от ширины содержащего элемента.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "padding-right": {
    "<length>": "Указывает правый отступ, используя значение длины (px, em, rem и т.д.).",
    "<percentage>": "Указывает правый отступ в процентах от ширины содержащего элемента.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "padding-top": {
    "<length>": "Указывает верхний отступ, используя значение длины (px, em, rem и т.д.).",
    "<percentage>": "Указывает верхний отступ в процентах от ширины содержащего элемента.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "page-break-after": {
    "auto": "По умолчанию. Автоматические разрывы страниц.",
    "always": "Всегда вставлять разрыв страницы после элемента.",
    "avoid": "По возможности избегать разрыва страницы после элемента.",
    "left": "Вставлять разрывы страниц после элемента, пока не будет достигнута левая страница.",
    "right": "Вставлять разрывы страниц после элемента, пока не будет достигнута правая страница.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "page-break-before": {
    "auto": "По умолчанию. Автоматические разрывы страниц.",
    "always": "Всегда вставлять разрыв страницы перед элементом.",
    "avoid": "По возможности избегать разрыва страницы перед элементом.",
    "left": "Вставлять разрывы страниц перед элементом, пока не будет достигнута левая страница.",
    "right": "Вставлять разрывы страниц перед элементом, пока не будет достигнута правая страница.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "page-break-inside": {
    "auto": "По умолчанию. Автоматические разрывы страниц.",
    "avoid": "По возможности избегать разрыва страницы внутри элемента.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "perspective": {
    "none": "Без перспективы.",
    "<length>": "Определяет расстояние между плоскостью z=0 и пользователем (px, em и т.д.) для 3D-преобразований.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "perspective-origin": {
    "<position>": "Определяет позицию, на которую смотрит наблюдатель (комбинации left, center, right, top, bottom, длины или проценты).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "quotes": {
    "none": "Кавычки не отображаются.",
    "<string>": "Устанавливает кавычки, которые будут использоваться (предоставляет пары открывающих/закрывающих кавычек).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "resize": {
    "none": "Пользователь не может изменять размер элемента.",
    "both": "Пользователь может изменять размер элемента как по горизонтали, так и по вертикали.",
    "horizontal": "Пользователь может изменять размер элемента по горизонтали.",
    "vertical": "Пользователь может изменять размер элемента по вертикали.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "right": {
    "auto": "Браузер вычисляет положение справа.",
    "<length>": "Указывает положение, используя значение длины (px, em, rem и т.д.).",
    "<percentage>": "Указывает положение в процентах от ширины содержащего элемента.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "tab-size": {
    "<integer>": "Указывает ширину символов табуляции как количество символов.",
    "<length>": "Указывает ширину символов табуляции, используя значение длины (px, em и т.д.).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "table-layout": {
    "auto": "По умолчанию. Ширина столбца определяется самым широким неразрывным содержимым в ячейках.",
    "fixed": "Ширина таблицы и столбцов устанавливается шириной элементов table и col или шириной первого ряда ячеек.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "text-align": {
    "left": "Содержимое выравнивается по левому краю.",
    "right": "Содержимое выравнивается по правому краю.",
    "center": "Содержимое выравнивается по центру.",
    "justify": "Содержимое растягивается, чтобы соответствовать ширине контейнера.",
    "start": "Выравнивает содержимое по началу контейнера (зависит от направления текста).",
    "end": "Выравнивает содержимое по концу контейнера (зависит от направления текста).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "text-align-last": {
    "auto": "По умолчанию. Последняя строка выравнивается в соответствии со значением text-align.",
    "left": "Последняя строка выравнивается по левому краю.",
    "right": "Последняя строка выравнивается по правому краю.",
    "center": "Последняя строка выравнивается по центру.",
    "justify": "Последняя строка выравнивается по ширине.",
    "start": "Последняя строка выравнивается по началу (зависит от направления текста).",
    "end": "Последняя строка выравнивается по концу (зависит от направления текста).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "text-decoration": {
    "none": "К тексту не добавляется никакого оформления.",
    "underline": "Текст имеет линию под ним.",
    "overline": "Текст имеет линию над ним.",
    "line-through": "Текст имеет линию через него (зачеркнутый).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "text-decoration-color": {
    "<color>": "Устанавливает цвет оформления текста (можно использовать названия цветов, шестнадцатеричные значения, RGB и т.д.).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "text-decoration-line": {
    "none": "К тексту не добавляется линия оформления.",
    "underline": "Текст имеет линию под ним.",
    "overline": "Текст имеет линию над ним.",
    "line-through": "Текст имеет линию через него (зачеркнутый).",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "text-decoration-style": {
    "solid": "Оформление в виде сплошной линии (по умолчанию).",
    "double": "Оформление в виде двойной линии.",
    "dotted": "Оформление в виде точечной линии.",
    "dashed": "Оформление в виде пунктирной линии.",
    "wavy": "Оформление в виде волнистой линии.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "text-indent": {
    "<length>": "Отступ текста на указанную длину (px, em, rem и т.д.).",
    "<percentage>": "Отступ текста в процентах от ширины содержащего элемента.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "text-justify": {
    "auto": "Браузер определяет алгоритм выравнивания.",
    "inter-word": "Выравнивает текст, регулируя только пространство между словами.",
    "inter-character": "Выравнивает текст, регулируя пространство между символами.",
    "none": "Выравнивание не применяется.",
    "initial": "Устанавливает значение свойства по умолчанию.",
    "inherit": "Наследует это свойство от родительского элемента."
  },
  "text-overflow": {
    "clip": "По умолчанию. Текст обрезается и становится недоступным.",
    "ellipsis": "Отображается многоточие ('...') для обозначения обрезанного текста.",
    "<string>": "Отображается указанная строка для обозначения обрезанного текста.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "text-shadow": {
    "none": "Тень не отображается.",
    "<shadow>": "Задает эффект тени (горизонтальное смещение, вертикальное смещение, радиус размытия, цвет).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "text-transform": {
    "none": "Без преобразования. Текст отображается как есть.",
    "capitalize": "Преобразует первую букву каждого слова в заглавную.",
    "uppercase": "Преобразует все символы в заглавные.",
    "lowercase": "Преобразует все символы в строчные.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "top": {
    "auto": "Браузер вычисляет верхнюю позицию.",
    "<length>": "Задает позицию с использованием значения длины (px, em, rem и т. д.).",
    "<percentage>": "Задает позицию как процент от высоты родительского элемента.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "transform": {
    "none": "Преобразование не применяется.",
    "matrix()": "Определяет двумерное преобразование с использованием матрицы из шести значений.",
    "matrix3d()": "Определяет трёхмерное преобразование с использованием 4x4 матрицы из 16 значений.",
    "translate()": "Определяет двумерное смещение.",
    "translate3d()": "Определяет трёхмерное смещение.",
    "translateX()": "Определяет смещение по оси X.",
    "translateY()": "Определяет смещение по оси Y.",
    "translateZ()": "Определяет смещение по оси Z.",
    "scale()": "Определяет двумерное масштабирование.",
    "scale3d()": "Определяет трёхмерное масштабирование.",
    "scaleX()": "Определяет масштабирование по оси X.",
    "scaleY()": "Определяет масштабирование по оси Y.",
    "scaleZ()": "Определяет масштабирование по оси Z.",
    "rotate()": "Определяет двумерное вращение.",
    "rotate3d()": "Определяет трёхмерное вращение.",
    "rotateX()": "Определяет вращение вокруг оси X.",
    "rotateY()": "Определяет вращение вокруг оси Y.",
    "rotateZ()": "Определяет вращение вокруг оси Z.",
    "skew()": "Определяет двумерное искажение по осям X и Y.",
    "skewX()": "Определяет искажение по оси X.",
    "skewY()": "Определяет искажение по оси Y.",
    "perspective()": "Определяет перспективу для трёхмерно трансформированного элемента.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "transform-origin": {
    "<position>": "Определяет точку начала трансформации (сочетания left, center, right, top, bottom, длины или проценты).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "transform-style": {
    "flat": "Дочерние элементы не сохраняют своё 3D-положение (по умолчанию).",
    "preserve-3d": "Дочерние элементы сохраняют своё 3D-положение.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "transition": {
    "<transition-property>": "Указывает CSS-свойство, к которому применяется переход.",
    "<transition-duration>": "Указывает продолжительность эффекта перехода.",
    "<transition-timing-function>": "Указывает кривую скорости эффекта перехода.",
    "<transition-delay>": "Указывает, когда начнется эффект перехода.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "transition-delay": {
    "<time>": "Указывает задержку перед началом перехода (в секундах или миллисекундах).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "transition-duration": {
    "<time>": "Указывает продолжительность эффекта перехода (в секундах или миллисекундах).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "transition-property": {
    "none": "Переходы не применяются ни к одному свойству.",
    "all": "Переход применяется ко всем свойствам (по умолчанию).",
    "<property>": "Конкретное имя свойства (или список), к которому применяется переход.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "transition-timing-function": {
    "ease": "По умолчанию. Медленное начало, быстрое середина и медленный конец.",
    "linear": "Одинаковая скорость от начала до конца.",
    "ease-in": "Медленное начало, затем быстрое завершение.",
    "ease-out": "Быстрое начало, затем медленное завершение.",
    "ease-in-out": "Медленное начало и завершение, быстрая середина.",
    "step-start": "Эквивалентно steps(1, start).",
    "step-end": "Эквивалентно steps(1, end).",
    "steps()": "Разбивает переход на равные шаги.",
    "cubic-bezier()": "Пользовательская функция скорости, определяемая кривой Безье.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "unicode-bidi": {
    "normal": "Не открывает дополнительный уровень вложенности.",
    "embed": "Открывает дополнительный уровень вложенности.",
    "bidi-override": "Создает переопределение для встроенных элементов.",
    "isolate": "Элемент изолирован от соседних элементов.",
    "isolate-override": "Комбинирует isolate и override.",
    "plaintext": "Элемент форматируется в соответствии с алгоритмом Unicode Bidirectional.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "vertical-align": {
    "baseline": "Выравнивает базовую линию элемента по базовой линии родителя (по умолчанию).",
    "sub": "Выравнивает элемент как подстрочный.",
    "super": "Выравнивает элемент как надстрочный.",
    "text-top": "Выравнивает верх элемента по верху шрифта родителя.",
    "text-bottom": "Выравнивает низ элемента по низу шрифта родителя.",
    "middle": "Выравнивает середину элемента по середине строчных букв родителя.",
    "top": "Выравнивает верх элемента по верхней части самого высокого элемента строки.",
    "bottom": "Выравнивает низ элемента по нижней части самого низкого элемента строки.",
    "<length>": "Поднимает или опускает элемент на указанную длину.",
    "<percentage>": "Поднимает или опускает элемент на указанный процент от свойства line-height.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "visibility": {
    "visible": "По умолчанию. Элемент видим.",
    "hidden": "Элемент скрыт (но продолжает занимать место).",
    "collapse": "Для строк и столбцов таблиц: элемент удаляется, но структура таблицы сохраняется.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "white-space": {
    "normal": "По умолчанию. Последовательности пробелов сворачиваются в один. Текст переносится по необходимости.",
    "nowrap": "Последовательности пробелов сворачиваются в один. Текст не переносится.",
    "pre": "Пробелы сохраняются. Текст переносится только на разрывах строк.",
    "pre-wrap": "Пробелы сохраняются. Текст переносится по необходимости и на разрывах строк.",
    "pre-line": "Пробелы сворачиваются. Текст переносится по необходимости и на разрывах строк.",
    "break-spaces": "Как pre-wrap, но также переносит строки по пробелам.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "widows": {
    "<integer>": "Задает минимальное количество строк абзаца, которые должны остаться в начале страницы.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "width": {
    "<length>": "Задает ширину фиксированным значением (px, em, rem и т. д.).",
    "<percentage>": "Задает ширину как процент от родительского блока.",
    "auto": "Браузер вычисляет ширину.",
    "max-content": "Предпочтительная внутренняя ширина.",
    "min-content": "Минимальная внутренняя ширина.",
    "fit-content": "Длина ограничивается max-content, но не может быть меньше min-content.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "word-break": {
    "normal": "По умолчанию. Используются стандартные правила переноса строк.",
    "break-all": "Слова могут переноситься между любыми символами.",
    "keep-all": "Не использовать переносы слов для китайского, японского и корейского текста.",
    "break-word": "Похоже на break-all, но старается не разрывать слова.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "word-spacing": {
    "normal": "По умолчанию. Стандартный интервал между словами.",
    "<length>": "Определяет дополнительное расстояние между словами (px, em, rem и т. д.).",
    "<percentage>": "Определяет дополнительное расстояние как процент от размера шрифта.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "word-wrap": {
    "normal": "По умолчанию. Слова переносятся только в допустимых точках.",
    "break-word": "Позволяет разрывать длинные слова и переносить их на следующую строку.",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  },
  "z-index": {
    "auto": "По умолчанию. Элементы располагаются в порядке появления.",
    "<integer>": "Устанавливает порядок наложения элемента (элементы с большими значениями располагаются выше).",
    "initial": "Устанавливает значение свойства в значение по умолчанию.",
    "inherit": "Наследует значение от родительского элемента."
  }
}